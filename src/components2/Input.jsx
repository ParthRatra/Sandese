import React, { useContext, useState } from "react";

import { AuthContext } from "../Context/AuthContext";
import { ChatContext } from "../Context/ChatContext";
import {
  arrayUnion,
  doc,
  serverTimestamp,
  Timestamp,
  updateDoc,
} from "firebase/firestore";
import { db, storage } from "../Firebase";
import { v4 as uuid } from "uuid";
import { getDownloadURL, ref, uploadBytesResumable } from "firebase/storage";
import { HiOutlinePhotograph  } from 'react-icons/hi';
const Input = () => {
  const [text, setText] = useState("");
  const [img, setImg] = useState(null);

  const { currentUser } = useContext(AuthContext);
  const { data } = useContext(ChatContext);
 
  const handleSend = async () => {
    // https://firebase.google.com/docs/firestore/manage-data/add-data#update_elements_in_an_array idhr se liya hai
    if(text<=0)
    {
     return alert('No message');
     
    }
    if (img) {
      // {Database systems: UUIDs can be used as primary keys or unique identifiers for database records, ensuring that each record has a globally unique identifier. This is especially useful in distributed or replicated database environments.
      
      const storageRef = ref(storage, uuid());

      const uploadTask = uploadBytesResumable(storageRef, img);
       // This code is responsible for uploading the image to the specified storage location.
  // and storage isliye kiya because image storage mai hona chaiye upload
  // vo object ko store krta

      uploadTask.on(
        (error) => {
        
        },
        () => {
          getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {
            await updateDoc(doc(db, "chats", data.chatId), {
              messages: arrayUnion({
                id: uuid(),
                text,
                senderId: currentUser.uid,
                date: Timestamp.now(),
                img: downloadURL,
              }),
            });
          });
        }
      );
    } 
    // yh chaiye hoga na kuki combined id hogi vovala chat khulna chaiye na
  // await updateDoc(washingtonRef, {
    // regions: arrayUnion("greater_virginia")
  // });
    else {
      //   It updates a Firestore document using the updateDoc function, specifying the document location as doc(db, "chats", data.chatId). This points to the "chats" collection and the specific chat document identified by data.chatId.
// Within the document update, it adds a new element to the regions array using the arrayUnion function. This new element contains an object with properties id, senderId, and date, which are set to the values generated by the uuid function, the currentuser.uid, and the Timestamp.now() respectively.
// This code is responsible for updating the Firestore document with the new chat message details when there is no image attached.
 
      await updateDoc(doc(db, "chats", data.chatId), {
        messages: arrayUnion({
          id: uuid(),
          text,
          senderId: currentUser.uid,
          date: Timestamp.now(),
        }),
      });
    }

    await updateDoc(doc(db, "userChats", currentUser.uid), {
      [data.chatId + ".lastMessage"]: {
        text,
      },
      [data.chatId + ".date"]: serverTimestamp(),
    });

    await updateDoc(doc(db, "userChats", data.user.uid), {
      [data.chatId + ".lastMessage"]: {
        text,
      },
      [data.chatId + ".date"]: serverTimestamp(),
    });

    setText("");
    setImg(null);
  };


  const handleKey = (e) => {
    if (e.key === 'Enter') {
      handleSend();
    }
  };
  
  return (
    <>
      <div className='imputing'>
        <input
          className='texting'
          type='text'
          placeholder='Type something...'
          style={{ outline: 'none', paddingLeft: '20px' }}
          value={text}
          onChange={(e) => setText(e.target.value)}
          onKeyDown={handleKey} // Move the onKeyDown event here
        />
        <div className='send'>
          <input type='file' id='file' style={{ display: 'none' }} />
          <label htmlFor='file'>
            <HiOutlinePhotograph style={{ color: '#e27396', fontSize: '35px', cursor: 'pointer' }} />
          </label>
          <button className='butting' onClick={handleSend}>
            Send
          </button>
        </div>
      </div>
    </>
  );
}
   export default Input;